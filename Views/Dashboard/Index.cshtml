@using SystemReportMVC.Helpers;

@{ ViewBag.Title = "Index";
                Layout = "~/Views/Shared/_Layout.cshtml";
                var userApp = (AppUser)Session[Constants.USER_SESSION]; }

<div class="wrapper">
    <div class="page">
        <div class="page-inner">
            <header class="page-title-bar">
                <div class="d-flex flex-column flex-md-row">
                    <p class="lead">
                        <span class="font-weight-bold">Xin chào! @userApp.HoTen </span> <span class="d-block text-muted" style="font-size: 14px"> Đến với hệ thống</span>
                    </p>
                </div>
            </header>
            @*<div class="page-section">
                    <div class="col-lg-12" style="padding: 0">
                        <div class="card">
                            <div class="card-header">
                            </div>
                            <div class="card-body" style="padding: 0">
                                <div id="myTabCard" class="tab-content">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
            <div class="section-block">
                <div class="metric-row">
                    <div class="col-lg-12">
                        <div class="metric-row metric-flush">
                            <div class="col" style="padding-right: 5px; padding-right: 5px">
                                <a href="@Url.Action("index","du-an")" class="bg-cyan card metric metric-bordered align-items-center">
                                    <h2 class="metric-label text-white"> Chờ nhập liệu </h2>
                                    <p class="metric-value h3 text-white">
                                        <sub><i class="oi oi-people text-white"></i></sub> <span class="value">1</span>
                                    </p>
                                </a>
                            </div>
                            <div class="col" style="padding-right: 5px; padding-right: 5px">
                                <a href="/du-an?status=99" class="bg-success card metric metric-bordered align-items-center">
                                    <h2 class="metric-label text-white"> Chờ duyệt </h2>
                                    <p class="metric-value h3 text-white">
                                        <sub><i class="oi oi-fork text-white"></i></sub> <span class="value">1</span>
                                    </p>
                                </a>
                            </div>
                            <div class="col" style="padding-right: 5px; padding-right: 5px">
                                <a href="/du-an?status=-1" class="bg-red card metric metric-bordered align-items-center">
                                    <h2 class="metric-label text-white">Chờ xuất bản</h2>
                                    <p class="metric-value h3 text-white">
                                        <sub><i class="fa fa-tasks text-white"></i></sub> <span class="value">1</span>
                                    </p>
                                </a>
                            </div>
                            <div class="col" style="padding-right: 5px; padding-right: 5px">
                                <a href="/dashboard/khokhan" class="bg-pink card metric metric-bordered align-items-center">
                                    <h2 class="metric-label text-white"> Xuất bản </h2>
                                    <p class="metric-value h3 text-white">
                                        <sub><i class="fab fa-audible text-white"></i></sub> <span class="value">1</span>
                                    </p>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="page-section">
                <!-- grid row -->
                <div class="row">
                    <!-- grid column -->
                    <div class="col-lg-6">
                        <!-- .card -->
                        <div class="card card-fluid">
                            <!-- .card-body -->
                            <div class="card-body">
                                <canvas id="canvas-data-labelling" class="chartjs"></canvas>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div><!-- /.col -->
                    <div class="col-lg-6">
                        <!-- .card -->
                        <div class="card card-fluid">
                            <!-- .card-body -->
                            <div class="card-body">
                                <canvas id="canvas-doughnut" class="chartjs"></canvas>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div><!-- /grid column -->
                </div><!-- /grid row -->
            </div><!-- /.page-section -->
        </div>
    </div>
</div>

<script src="~/Assets/vendor/jquery/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        dataLabellingChart();
        doughnutChart();
       })
function randomScalingFactor() {
                return (Math.random() > 0.5 ? 1.0 : -1.0) * Math.round(Math.random() * 100);
            }
function randomScaling() {
                return Math.round(Math.random() * 100);
            }
  function months() {
                return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            }
    function dataLabellingChart() {
        var data = {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
            datasets: [{
                type: 'bar',
                label: 'Dataset 1',
                backgroundColor: Chart.helpers.color(Looper.colors.brand.purple).alpha(0.2).rgbString(),
                borderColor: Looper.colors.brand.purple,
                data: [randomScalingFactor(),randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
            }, {
                type: 'line',
                label: 'Dataset 2',
                backgroundColor: Chart.helpers.color(Looper.colors.brand.green).alpha(0.2).rgbString(),
                borderColor: Looper.colors.brand.green,
                data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
            }, {
                type: 'bar',
                label: 'Dataset 3',
                backgroundColor: Chart.helpers.color(Looper.colors.brand.teal).alpha(0.2).rgbString(),
                borderColor: Looper.colors.brand.teal,
                data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
            }]
        }; // Define a plugin to provide data labels

        Chart.plugins.register({
            afterDatasetsDraw: function afterDatasetsDraw(chartInstance, easing) {
                // To only draw at the end of animation, check for easing === 1
                var ctx = chartInstance.chart.ctx;
                chartInstance.data.datasets.forEach(function (dataset, i) {
                    // labelling only first chart
                    if (chartInstance.id > 0) {
                        return;
                    }

                    var meta = chartInstance.getDatasetMeta(i);

                    if (!meta.hidden) {
                        meta.data.forEach(function (element, index) {
                            // Draw the text in black, with the specified font
                            ctx.fillStyle = '#686F76';
                            var fontSize = 12;
                            var fontStyle = 'normal';
                            var fontFamily = 'inherit';
                            ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily); // Just naively convert to string for now

                            var dataString = dataset.data[index].toString(); // Make sure alignment settings are correct

                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'middle';
                            var padding = 5;
                            var position = element.tooltipPosition();
                            ctx.fillText(dataString, position.x, position.y - fontSize / 2 - padding);
                        });
                    }
                });
            }
        }); // init chart data labelling

        var canvas = $('#canvas-data-labelling')[0].getContext('2d');
        var chart = new Chart(canvas, {
            type: 'bar',
            data: data,
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Theo dõi sự biến động chỉ tiêu báo cáo'
                }
            }
        });
    }
    function doughnutChart() {
        var data = {
            type: 'doughnut',
            data: {
                datasets: [{
                    data: [randomScaling(), randomScaling(), randomScaling(), randomScaling(), randomScaling()],
                    borderColor: [Looper.colors.white, Looper.colors.white, Looper.colors.white, Looper.colors.white, Looper.colors.white],
                    backgroundColor: [Looper.colors.brand.red, Looper.colors.brand.purple, Looper.colors.brand.yellow, Looper.colors.brand.teal, Looper.colors.brand.indigo],
                    label: 'Dataset 1'
                }],
                labels: ['Red', 'Purple', 'Yellow', 'Green', 'Blue']
            },
            options: {
                responsive: true,
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Tình trạng báo cáo'
                },
                animation: {
                    animateScale: true,
                    animateRotate: true
                }
            }
        }; // init chart doughnut
        var canvas = $('#canvas-doughnut')[0].getContext('2d');
        var chart = new Chart(canvas, data);

    }
</script>
