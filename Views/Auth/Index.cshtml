@model SystemReportMVC.Models.NguoiDung
@{ Layout = null;
    string error = ViewBag.Error != null ? (string)ViewBag.Error : null; }

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title> Đăng nhập - Hệ thống báo cáo</title>
    <link rel="apple-touch-icon" sizes="144x144" href="assets/apple-touch-icon.png">
    <link rel="shortcut icon" href="assets/favicon.ico">
    <meta name="theme-color" content="#3063A0">
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:400,500,600" rel="stylesheet">
    <link rel="stylesheet" href="~/Assets/stylesheets/theme.min.css" data-skin="default">
    <link rel="stylesheet" href="~/Assets/stylesheets/theme-dark.min.css" data-skin="dark">
    <link rel="stylesheet" href="~/Assets/stylesheets/custom.css">
    <script>
        var skin = localStorage.getItem('skin') || 'default';
        var isCompact = JSON.parse(localStorage.getItem('hasCompactMenu'));
        var disabledSkinStylesheet = document.querySelector('link[data-skin]:not([data-skin="' + skin + '"])');
        disabledSkinStylesheet.setAttribute('rel', '');
        disabledSkinStylesheet.setAttribute('disabled', true);
        if (isCompact == true) document.querySelector('html').classList.add('preparing-compact-menu');
    </script>
</head>
<body>
    <main class="auth">
        <header id="auth-header" class="auth-header" style="background-image: url(assets/images/illustration/img-1.png);">
            <h1 style="margin-bottom: 40px">
            Hệ thống báo cáo   
            </h1>
        </header>
        @using (@Html.BeginForm("SignIn", "Auth", FormMethod.Post, new { @class = "auth-form" }))
        {
            if (error != null)
            {
<div class="alert alert-danger" role="alert">
    @error
</div> 
        }
<div class="form-group">
    <label for="tf1"> Tài khoản</label>
    @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control", required = "required" } })
</div>
                <div class="form-group">
                    <label for="tf1">Mật khẩu</label>
                    @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { type = "password", @class = "form-control", required = "required" } })
                </div>
                                <div class="form-group">
                                    <button class="btn btn-lg btn-primary btn-block" type="submit">Đăng nhập</button>
                                </div>}
    </main>

    <script src="~/Assets/vendor/jquery/jquery.min.js"></script>
    <script src="~/Assets/vendor/popper.js/umd/popper.min.js"></script>
    <script src="~/Assets/vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Assets/vendor/particles.js/particles.js"></script>
    <script src="~/Assets/javascript/theme.js"></script>
</body>
</html>
